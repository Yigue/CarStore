services:
  web-api:
    image: ${DOCKER_REGISTRY-}carstore-api:latest
    container_name: carstore-api
    build:
      context: .
      dockerfile: src/Web.Api/Dockerfile
      args:
        - BUILD_CONFIGURATION=Release
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Host=postgres;Port=5432;Database=carstore;Username=postgres;Password=postgres;
      - Serilog__WriteTo__1__Args__ServerUrl=http://seq:5341
    depends_on:
      postgres:
        condition: service_healthy
      seq:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - carstore-network

  postgres:
    image: postgres:17-alpine
    container_name: carstore-postgres
    environment:
      - POSTGRES_DB=carstore
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d carstore"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - carstore-network

  seq:
    image: datalust/seq:2024.3
    container_name: carstore-seq
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=QH+z7gBZ7+2+9v3iQIDAQAB
    ports:
      - "8081:80"
    volumes:
      - seq_data:/data
    restart: unless-stopped
    networks:
      - carstore-network

  redis:
    image: redis:7-alpine
    container_name: carstore-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - carstore-network

volumes:
  postgres_data:
    driver: local
  seq_data:
    driver: local
  redis_data:
    driver: local

networks:
  carstore-network:
    driver: bridge
